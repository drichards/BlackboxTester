Signatures:

ADT: Nat
    zero  :             -> Nat
    succ  :   Nat       -> Nat
    pred  :   Nat       -> Nat
    asInt :  Nat       -> int
    eqNat :  Nat * Nat -> boolean
    plus  :   Nat * Nat -> Nat
    times :  Nat * Nat -> Nat
    power :  Nat * Nat -> Nat
    minus :  Nat * Nat -> Nat

ADT: Factorial

    factorial : Nat -> Nat

Equations:
    (pred (succ m))  =  m

    (asInt (minus m n)) = (- (asInt m) (asInt n))
    (asInt (zero))  =  0
    (asInt (succ m))  =  (+ 1 (asInt m))

    (eqNat (zero) (zero))  =  #t
    (eqNat (zero) (succ m))  =  #f
    (eqNat (succ m) (zero))  =  #f
    (eqNat (succ m) (succ n))  =  (eqNat m n)

    (plus m (zero))  =  m
    (plus m (succ n))  =  (succ (plus m n))

    (times m (zero))  =  (zero)
    (times m (succ n))  =  (plus m (times m n))

    (power (zero) (zero))  =  (succ (zero))
    (power (succ m) (zero))  =  (succ (zero))
    (power m (succ n))  =  (times m (power m n))

    (factorial (zero))  =  (succ (zero))
    (factorial (succ n))  =  (times (succ n) (factorial n))                                                         