/* Generated By:JavaCC: Do not edit this line. InputParserConstants.java */
package parser.generated;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface InputParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEGER = 5;
  /** RegularExpression Id. */
  int STRING = 6;
  /** RegularExpression Id. */
  int CHARACTER = 7;
  /** RegularExpression Id. */
  int BOOLEAN = 8;
  /** RegularExpression Id. */
  int ASTERIX = 9;
  /** RegularExpression Id. */
  int COLON = 10;
  /** RegularExpression Id. */
  int ADT = 11;
  /** RegularExpression Id. */
  int SIGNATURES = 12;
  /** RegularExpression Id. */
  int EQUATIONS = 13;
  /** RegularExpression Id. */
  int PLUS = 14;
  /** RegularExpression Id. */
  int MINUS = 15;
  /** RegularExpression Id. */
  int DOTDOTDOT = 16;
  /** RegularExpression Id. */
  int ARROW = 17;
  /** RegularExpression Id. */
  int DOT = 18;
  /** RegularExpression Id. */
  int AT = 19;
  /** RegularExpression Id. */
  int EXCLAMATION = 20;
  /** RegularExpression Id. */
  int DOLLAR = 21;
  /** RegularExpression Id. */
  int PERCENT = 22;
  /** RegularExpression Id. */
  int AMP = 23;
  /** RegularExpression Id. */
  int SLASH = 24;
  /** RegularExpression Id. */
  int LESS_THAN = 25;
  /** RegularExpression Id. */
  int EQUALS = 26;
  /** RegularExpression Id. */
  int GREATER_THAN = 27;
  /** RegularExpression Id. */
  int QUESTION_MARK = 28;
  /** RegularExpression Id. */
  int CARROT = 29;
  /** RegularExpression Id. */
  int UNDERSCORE = 30;
  /** RegularExpression Id. */
  int TILDA = 31;
  /** RegularExpression Id. */
  int HEX_ESCAPE = 32;
  /** RegularExpression Id. */
  int ND = 33;
  /** RegularExpression Id. */
  int MC = 34;
  /** RegularExpression Id. */
  int ME = 35;
  /** RegularExpression Id. */
  int LU = 36;
  /** RegularExpression Id. */
  int PECULIAR_ID = 37;
  /** RegularExpression Id. */
  int SPECIAL_SUBSEQUENT = 38;
  /** RegularExpression Id. */
  int SUBSEQUENT = 39;
  /** RegularExpression Id. */
  int INLINE_HEX_ESCAPE = 40;
  /** RegularExpression Id. */
  int SPECIAL_INITIAL = 41;
  /** RegularExpression Id. */
  int CONSTITUENT = 42;
  /** RegularExpression Id. */
  int INITIAL = 43;
  /** RegularExpression Id. */
  int ID = 44;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"int\"",
    "\"string\"",
    "\"character\"",
    "\"boolean\"",
    "\"*\"",
    "\":\"",
    "\"ADT:\"",
    "\"Signatures:\"",
    "\"Equations:\"",
    "\"+\"",
    "\"-\"",
    "\"...\"",
    "\"->\"",
    "\".\"",
    "\"@\"",
    "\"!\"",
    "\"$\"",
    "\"%\"",
    "\"&\"",
    "\"/\"",
    "\"<\"",
    "\"=\"",
    "\">\"",
    "\"?\"",
    "\"^\"",
    "\"_\"",
    "\"~\"",
    "\"\\\\x\"",
    "<ND>",
    "<MC>",
    "<ME>",
    "<LU>",
    "<PECULIAR_ID>",
    "<SPECIAL_SUBSEQUENT>",
    "<SUBSEQUENT>",
    "<INLINE_HEX_ESCAPE>",
    "<SPECIAL_INITIAL>",
    "<CONSTITUENT>",
    "<INITIAL>",
    "<ID>",
  };

}
