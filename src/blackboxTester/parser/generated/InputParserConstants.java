/* Generated By:JavaCC: Do not edit this line. InputParserConstants.java */
package blackboxTester.parser.generated;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface InputParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int TRUE = 5;
  /** RegularExpression Id. */
  int FALSE = 6;
  /** RegularExpression Id. */
  int NOT = 7;
  /** RegularExpression Id. */
  int INTEGER = 8;
  /** RegularExpression Id. */
  int STRING = 9;
  /** RegularExpression Id. */
  int CHARACTER = 10;
  /** RegularExpression Id. */
  int BOOLEAN = 11;
  /** RegularExpression Id. */
  int ASTERIX = 12;
  /** RegularExpression Id. */
  int COLON = 13;
  /** RegularExpression Id. */
  int ADT = 14;
  /** RegularExpression Id. */
  int SIGNATURES = 15;
  /** RegularExpression Id. */
  int EQUATIONS = 16;
  /** RegularExpression Id. */
  int PLUS = 17;
  /** RegularExpression Id. */
  int MINUS = 18;
  /** RegularExpression Id. */
  int ARROW = 19;
  /** RegularExpression Id. */
  int LESS_THAN = 20;
  /** RegularExpression Id. */
  int EQUALS = 21;
  /** RegularExpression Id. */
  int GREATER_THAN = 22;
  /** RegularExpression Id. */
  int HEX_ESCAPE = 23;
  /** RegularExpression Id. */
  int LEFT_PAREN = 24;
  /** RegularExpression Id. */
  int RIGHT_PAREN = 25;
  /** RegularExpression Id. */
  int UINT10 = 26;
  /** RegularExpression Id. */
  int ND = 27;
  /** RegularExpression Id. */
  int MC = 28;
  /** RegularExpression Id. */
  int ME = 29;
  /** RegularExpression Id. */
  int LU = 30;
  /** RegularExpression Id. */
  int LL = 31;
  /** RegularExpression Id. */
  int LT = 32;
  /** RegularExpression Id. */
  int LM = 33;
  /** RegularExpression Id. */
  int LO = 34;
  /** RegularExpression Id. */
  int MN = 35;
  /** RegularExpression Id. */
  int NL = 36;
  /** RegularExpression Id. */
  int NO = 37;
  /** RegularExpression Id. */
  int PD = 38;
  /** RegularExpression Id. */
  int PC = 39;
  /** RegularExpression Id. */
  int PO = 40;
  /** RegularExpression Id. */
  int SC = 41;
  /** RegularExpression Id. */
  int SM = 42;
  /** RegularExpression Id. */
  int SK = 43;
  /** RegularExpression Id. */
  int SO = 44;
  /** RegularExpression Id. */
  int CO = 45;
  /** RegularExpression Id. */
  int ID = 46;
  /** RegularExpression Id. */
  int PECULIAR_ID = 47;
  /** RegularExpression Id. */
  int INITIAL = 48;
  /** RegularExpression Id. */
  int SPECIAL_INITIAL = 49;
  /** RegularExpression Id. */
  int CONSTITUENT = 50;
  /** RegularExpression Id. */
  int SUBSEQUENT = 51;
  /** RegularExpression Id. */
  int SPECIAL_SUBSEQUENT = 52;
  /** RegularExpression Id. */
  int INLINE_HEX_ESCAPE = 53;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"#t\"",
    "\"#f\"",
    "\"not\"",
    "\"int\"",
    "\"string\"",
    "\"character\"",
    "\"boolean\"",
    "\"*\"",
    "\":\"",
    "\"ADT:\"",
    "\"Signatures:\"",
    "\"Equations:\"",
    "\"+\"",
    "\"-\"",
    "\"->\"",
    "\"<\"",
    "\"=\"",
    "\">\"",
    "\"\\\\x\"",
    "\"(\"",
    "\")\"",
    "<UINT10>",
    "<ND>",
    "<MC>",
    "<ME>",
    "<LU>",
    "<LL>",
    "<LT>",
    "<LM>",
    "<LO>",
    "<MN>",
    "<NL>",
    "<NO>",
    "<PD>",
    "<PC>",
    "<PO>",
    "<SC>",
    "<SM>",
    "<SK>",
    "<SO>",
    "<CO>",
    "<ID>",
    "<PECULIAR_ID>",
    "<INITIAL>",
    "<SPECIAL_INITIAL>",
    "<CONSTITUENT>",
    "<SUBSEQUENT>",
    "<SPECIAL_SUBSEQUENT>",
    "<INLINE_HEX_ESCAPE>",
  };

}
